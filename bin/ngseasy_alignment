#!/bin/bash -x
# Collection of NGSeasy Functions
# Stephen Newhouse <stephen.j.newhouse@gmail.com>
# Version 0.9.0

##--------------------------------------------------##
## NGS Alignment
##--------------------------------------------------##

#usage printing func
usage()
{
cat << EOF
  This script sets up the NGSeasy docker fastqc container and runs FastQC on raw fastq files
  See NGSEasy containerized instructions.

  ARGUMENTS:
  -h      Flag: Show this help message
  -c      NGSeasy project and run configureation file
  -d      NGSeasy project directory

  EXAMPLE USAGE:
    
    ngseasy_alignment -c config.file.tsv -d project_directory

EOF
}

#get options for command line args
  while  getopts "hc:d:" opt
  do

      case ${opt} in
	  h)
	  usage #print help
	  exit 0
	  ;;
	  
	  c)
	  config_tsv=${OPTARG}
	  ;;

	  d)
	  project_directory=${OPTARG}
	  ;; 
      esac
  done

#check config file exists.
if [ ! -e "${config_tsv}" ] 
then
	    echo "ERROR :  ${config_tsv} does not exist....exiting "
	    usage;
	    exit 1;
fi

#check exists.
if [ ! -d "${project_directory}" ]
  then
    echo "ERROR : project_directory ${project_directory} does not exist "
    usage;
    exit 1;
fi

#Read config file 
while read -r f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14 f15
do

# set varibales  
  DATE=`date +"%d%m%y"`
  POJECT_ID=$f1
  SAMPLE_ID=$f2
  FASTQ1=$f3
  FASTQ2=$f4
  PROJECT_DIR=$f5 
  DNA_PREP_LIBRARY_ID=$f6
  NGS_PLATFORM=$f7
  NGS_TYPE=$f8
  BED_ANNO=$f9
  PIPELINE=$f10
  ALIGNER=$f11
  VARCALLER=$f12
  GTMODEGATK=$f13
  CLEANUP=$f14
  NCPU=$f15


#Logfile 
LOGFILE=${PROJECT_DIR}/${POJECT_ID}/run_logs/${SAMPLE_ID}.${DATE}

#OUTPUT SAMPLE DIR 
SOUT=${PROJECT_DIR}/${POJECT_ID}/${SAMPLE_ID}

#check local dir exists
if [ ! -d "${PROJECT_DIR}/${POJECT_ID}/${SAMPLE_ID}" ]
then
  logger_ngseasy " Cant Find Project directory. This is then end. Please Stop and check everything is ok " ${LOGFILE}
  exit 1

else 
  logger_ngseasy " Setting OUTPUT directory [${SOUT}]" ${LOGFILE}
fi

#check for fastq files exist
if [ ! -s "${SOUT}/fastq/${FASTQ1}" ] && [ ! -s "${SOUT}/fastq/${FASTQ2}" ]
then
  logger_ngseasy " Can't Find fastq files [${SOUT}/fastq/${FASTQ1}] and [${SOUT}/fastq/${FASTQ2}] in ${SOUT}/fastq/ " ${LOGFILE}
  exit 1
fi

#set new names for copied fastq files
  rawFASTQ1=`basename ${SOUT}/fastq/${FASTQ1} _1.fq.gz`
  rawFASTQ2=`basename ${SOUT}/fastq/${FASTQ2} _2.fq.gz`
    
logger_ngseasy " NGSeasy: Fastq Basename : [$rawFASTQ1] " ${LOGFILE}

#-------------------------------------------------------------------#

#check if qc'd data alread exists 
if [ -s "${SOUT}/fastq/${rawFASTQ1}_1.fq_fastqc.zip" ] && [ -s "${SOUT}/fastq/${rawFASTQ2}_2.fq_fastqc.zip" ] 
then
  logger_ngseasy " FastQC Data already exists...skipping" ${LOGFILE}
  exit 1
fi

#check if qc'd data alread exists 
if [ -s "${SOUT}/fastq/${rawFASTQ1}_1.filtered.fq.gz" ] && [ -s "${SOUT}/fastq/${rawFASTQ2}_2.filtered.fq.gz" ]
then
  logger_ngseasy " FastQC Data already exists...skipping" ${LOGFILE}
  exit 1
fi

#---------------------------------------FASTQC-----------------------------------------------------------#
  logger_ngseasy " START: FastQC on raw Fastq files " ${LOGFILE}


#run compbio/ngseasy-fastq
#Docker Output Dir: this is the mouned directory set by ngseasy_volumes_container
DOCKERHOME="/home/pipeman/ngs_projects"
#Docker OUTPUT SAMPLE DIR 
SOUTDocker=${DOCKERHOME}/${POJECT_ID}/${SAMPLE_ID}

#---------------------------------------------#
# BWA 
#---------------------------------------------#

if[ "${ALIGNER}" == "bwa" ]
then
  logger_ngseasy " START Basic BWA Alignment " ${LOGFILE}

# align wih bwa
  sudo docker run \
  -P \
  --rm=true \
  --name bwa_${SAMPLE_ID} \
  --volumes-from volumes_container \
  -t compbio/ngseasy-bwa:v0.9 \
    /usr/local/pipeline/bwa-0.7.10/bwa \
    -M \
    -t ${NCPU} \
    /home/pipeman/reference_genomes_b37/human_g1k_v37.fasta \
    ${qcdPeFASTQ1} ${qcdPeFASTQ2} > ${SOUTDocker}/alignments/${BAM_PREFIX}.raw.sam

    sudo docker logs bwa_${SAMPLE_ID} >> ${LOGFILE}.log

# sam to bam then sort and index
  logger_ngseasy " START BWA SAM to BAM  "  ${LOGFILE}

  sudo docker run \
  -P \
  --rm=true \
  --name sam2bam_${SAMPLE_ID} \
  --volumes-from volumes_container \
  -t compbio/ngseasy-samtools:v0.9 \
  /usr/local/pipeline/samtools/samtools \
  view -bhS \
  ${SOUTDocker}/alignments/${BAM_PREFIX}.raw.sam > ${SOUTDocker}/alignments/${BAM_PREFIX}.raw.bam;

    sudo docker logs sam2bam_${SAMPLE_ID} >> ${LOGFILE}.log

  logger_ngseasy " START BWA SORT BAM  "  ${LOGFILE}
  sudo docker run \
  -P \
  --rm=true \
  --name samtools_sort_${SAMPLE_ID} \
  --volumes-from volumes_container \
  -t compbio/ngseasy-samtools:v0.9 \
  /usr/local/pipeline/samtools/samtools \
  sort -f \
  ${SOUTDocker}/alignments/${BAM_PREFIX}.raw.bam ${SOUTDocker}/alignments/${BAM_PREFIX}.sort.bam;

    sudo docker logs samtools_sort_${SAMPLE_ID} >> ${LOGFILE}.log

  logger_ngseasy " START BWA INDEX BAM  "  ${LOGFILE}

  sudo docker run \
  -P \
  --rm=true \
  --name samtools_index_${SAMPLE_ID} \
  --volumes-from volumes_container \
  -t compbio/ngseasy-samtools:v0.9 \
  /usr/local/pipeline/samtools/samtools \
  index \
  ${SOUTDocker}/alignments/${BAM_PREFIX}.sort.bam

    sudo docker logs samtools_index_${SAMPLE_ID} >> ${LOGFILE}.log

  logger_ngseasy " END Basic BWA Alignment " ${LOGFILE}  
fi


# Novoalign
if[ "${ALIGNER}" == "novoalign" ]
then
  sudo docker run \
  -P \
  --rm=true \
  --name fastqc.${SAMPLE_ID} \
  --volumes-from volumes_container \
  -t compbio/ngseasy-novoalign:v0.9 
fi

# Stampy
if[ "${ALIGNER}" == "stampy" ]
then
  sudo docker run \
  -P \
  --rm=true \
  --name fastqc.${SAMPLE_ID} \
  --volumes-from volumes_container \
  -t compbio/ngseasy-bwa:v0.9 

  sudo docker run \
  -P \
  --rm=true \
  --name fastqc.${SAMPLE_ID} \
  --volumes-from volumes_container \
  -t compbio/ngseasy-stampy:v0.9 

fi







  #remove 
  #sudo docker rm -f fastqc.${SAMPLE_ID}

done < ${config_tsv}