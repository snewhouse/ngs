#!/bin/bash

# Run NGSeasy : top level master scrip

ngseasy() {

	
#usage printing func
usage()
{
cat << EOF
  This script calls the NGSeasy pipeline : <full/full_no_gatk/fastqc/fastq_trimm/alignment/var_call/cnv_call/var_annotate/alignment_qc>
  
  See NGSEasy containerized instructions.

  ARGUMENTS:
  
  -h      Flag: Show this help message
  -c      NGSeasy project and run configureation file
  -d      Base directory for (fastq_raw, reference_genomes_b37, gatk_resources, ngs_projects, ngseasy_scripts)

  EXAMPLE USAGE:
    
    ngseasy -c config.file.tsv -d /media/nsg_projects

EOF
}

#logging
log_ngseasy(){

	echo `date` ":[NGSeasy Log]:" ${1} >> ${2}.log
}

#check exists.
if [[ ! -e ${config_tsv} ]] 
  then
	  echo "ERROR : ${config_tsv} does not exist "
	  usage;
	  exit 1;
fi

#check exists.
if [[ ! -d ${project_directory} ]] 
  then
	  echo "ERROR :  ${project_directory} does not exist "
	  usage;
	  exit 1;
fi

#Default settings
project_directory=""
config_tsv=""

#get options for command line args
  while  getopts "h:c:d" opt
  do

      case ${opt} in
	  h)
	  usage #print help
	  exit 0
	  ;;
	  
	  c)
	  config_tsv=${OPTARG}
	  ;;
	 
	  d)
	  project_directory=${OPTARG}
	  ;; 
      esac
  done

# read config file #
# begin reading config file line by line
  
while read -r f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14 f15
do

# set varibales  
  POJECT_ID=$f1
  SAMPLE_ID=$f2
  FASTQ1=$f3
  FASTQ2=$f4
# PROJECT_DIR=$f5
  PROJECT_DIR=${project_directory}
  DNA_PREP_LIBRARY_ID=$f6
  NGS_PLATFORM=$f7
  NGS_TYPE=$f8
  BED_ANNO=$f9
  PIPELINE=$f10
  ALIGNER=$f11
  VARCALLER=$f12
  GTMODEGATK=$f13
  CLEANUP=$f14
  NCPU=$f15

#log it 
LOGFILE=${project_directory}/logs/${SAMPLE_ID}

log_ngseasy "ngseasy: run pipeline: ${PIPELINE}" 

# Call pipelien specified in config file #

/bin/bash ${PIPELINE}

done < ${config_tsv}

}