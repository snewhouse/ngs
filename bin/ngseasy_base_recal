#!/bin/bash -x
# Collection of NGSeasy Functions
# Stephen Newhouse <stephen.j.newhouse@gmail.com>
# Version 0.9.0

##--------------------------------------------------##
## NGS MarkDuplicates
##--------------------------------------------------##

#usage printing func
usage()
{
cat << EOF
  This script sets up the NGSeasy docker GATK container and runs BaseRecalibrator then PrintReads BQSR recalibration on *.realn.bam files
  See NGSEasy containerized instructions.

  ARGUMENTS:
  -h      Flag: Show this help message
  -c      NGSeasy project and run configureation file
  -d      NGSeasy project directory

  EXAMPLE USAGE:
    
    ngseasy_base_recal -c config.file.tsv -d project_directory

EOF
}

#get options for command line args
  while  getopts "hc:d:" opt
  do

      case ${opt} in
	  h)
	  usage #print help
	  exit 0
	  ;;
	  
	  c)
	  config_tsv=${OPTARG}
	  ;;

	  d)
	  project_directory=${OPTARG}
	  ;; 
      esac
  done

#check config file exists.
if [ ! -e "${config_tsv}" ] 
then
	    echo "ERROR :  ${config_tsv} does not exist....exiting "
	    usage;
	    exit 1;
fi

#check exists.
if [ ! -d "${project_directory}" ]
  then
    echo "ERROR : project_directory ${project_directory} does not exist "
    usage;
    exit 1;
fi

#---------------------------------------------------------------------------------#
#Read config file 
while read -r f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14 f15
do
# set varibales  
  DATE=`date +"%d%m%y"`
  POJECT_ID=$f1
  SAMPLE_ID=$f2
  FASTQ1=$f3
  FASTQ2=$f4
  PROJECT_DIR=$f5 
  DNA_PREP_LIBRARY_ID=$f6
  NGS_PLATFORM=$f7
  NGS_TYPE=$f8
  BED_ANNO=$f9
  PIPELINE=$f10
  ALIGNER=$f11
  VARCALLER=$f12
  GTMODEGATK=$f13
  CLEANUP=$f14
  NCPU=$f15


#Logfile 
LOGFILE=${PROJECT_DIR}/${POJECT_ID}/run_logs/${SAMPLE_ID}.${DATE}

#OUTPUT SAMPLE DIR 
SOUT=${PROJECT_DIR}/${POJECT_ID}/${SAMPLE_ID}

#------------------------Container I/O--------------------------------#
#run compbio/ngseasy-fastq
#Docker Output Dir: this is the mouned directory set by ngseasy_volumes_container
DOCKERHOME="/home/pipeman/ngs_projects"

#Docker OUTPUT SAMPLE DIR 
SOUTDocker=${DOCKERHOME}/${POJECT_ID}/${SAMPLE_ID}

#bamprefix
BAM_PREFIX=${SAMPLE_ID}.${NGS_TYPE}.${NGS_PLATFORM}.${ALIGNER}

#known indels and SNPs
KNOWN_INDELS=/home/pipeman/gatk_resources/Mills_and_1000G_gold_standard.indels.b37.vcf
KNOWN_SNPS_1000G=/home/pipeman/gatk_resources/1000G_phase1.snps.high_confidence.b37.vcf
KNOWN_SNPS_OMNI=/home/pipeman/gatk_resources/1000G_omni2.5.b37.vcf
KNOWN_SNPS_b138=/home/pipeman/gatk_resources/dbsnp_138.b37.vcf


#---------------------------------------------------------------------------------#
if [ ! -e ${SOUT}/alignments/${BAM_PREFIX}.recal.bam ]
then

# BaseRecalibrator pre recal
	logger_ngseasy " START BaseRecalibrator  "  ${LOGFILE}

  sudo docker run \
  -P \
  --name BaseRecalibrator_${SAMPLE_ID} \
  --volumes-from volumes_container \
  -t compbio/ngseasy-gatk:v0.9.1 \
  java -Xmx6g -Djava.io.tmpdir=${SOUTDocker}/tmp -jar /usr/local/pipeline/GenomeAnalysisTK-3.2-2/GenomeAnalysisTK.jar \
  -T BaseRecalibrator \
  -R /home/pipeman/reference_genomes_b37/human_g1k_v37.fasta \
  -nct ${NCPU}  \
  -I ${SOUTDocker}/alignments/${BAM_PREFIX}.realn.bam \
  -o ${SOUTDocker}/alignments/${BAM_PREFIX}.realn.bam.BaseRecalibrator.table \
  --knownSites ${KNOWN_INDELS} \
  --knownSites ${KNOWN_SNPS_1000G} \
  --knownSites ${KNOWN_SNPS_OMNI} \
  --knownSites ${KNOWN_SNPS_b138};

  sudo docker logs BaseRecalibrator_${SAMPLE_ID} >> ${LOGFILE}.log

  sudo docker rm BaseRecalibrator_${SAMPLE_ID}

  logger_ngseasy " END BaseRecalibrator  "  ${LOGFILE}

#PrintReads BQSR recalibration 
  logger_ngseasy " START PrintReads BQSR recalibration   "  ${LOGFILE}

  sudo docker run \
  -P \
  --name PrintReads_${SAMPLE_ID} \
  --volumes-from volumes_container \
  -t compbio/ngseasy-gatk:v0.9.1 \
  java -Xmx6g -Djava.io.tmpdir=${SOUTDocker}/tmp -jar /usr/local/pipeline/GenomeAnalysisTK-3.2-2/GenomeAnalysisTK.jar \
  -T PrintReads \
  -R /home/pipeman/reference_genomes_b37/human_g1k_v37.fasta \
  -nct ${NCPU} \
  --baq RECALCULATE \
  --baqGapOpenPenalty 40 \
  --BQSR ${SOUTDocker}/alignments/${BAM_PREFIX}.realn.bam.BaseRecalibrator.table \
  -I ${SOUTDocker}/alignments/${BAM_PREFIX}.realn.bam \
  -o ${SOUTDocker}/alignments/${BAM_PREFIX}.recal.bam;

  sudo docker logs PrintReads_${SAMPLE_ID} >> ${LOGFILE}.log

  sudo docker rm PrintReads_${SAMPLE_ID}

#index bam
	logger_ngseasy " START samtools index [${SOUTDocker}/alignments/${BAM_PREFIX}.recal.bam]  "  ${LOGFILE}

  sudo docker run \
  -P \
  --name samtools_index_${SAMPLE_ID} \
  --volumes-from volumes_container \
  -t compbio/ngseasy-samtools:v0.9 \
  /usr/local/pipeline/samtools/samtools index ${SOUTDocker}/alignments/${BAM_PREFIX}.recal.bam

  sudo docker logs samtools_index_${SAMPLE_ID} >> ${LOGFILE}.log

  sudo docker rm samtools_index_${SAMPLE_ID}

  logger_ngseasy " END PrintReads BQSR recalibration  "  ${LOGFILE}

# BaseRecalibrator post recal
  logger_ngseasy " START BaseRecalibrator post recal  "  ${LOGFILE}

  sudo docker run \
  -P \
  --name BaseRecalibrator_${SAMPLE_ID} \
  --volumes-from volumes_container \
  -t compbio/ngseasy-gatk:v0.9.1 \
  java -Xmx6g -Djava.io.tmpdir=${SOUTDocker}/tmp -jar /usr/local/pipeline/GenomeAnalysisTK-3.2-2/GenomeAnalysisTK.jar \
  -T BaseRecalibrator \
  -R /home/pipeman/reference_genomes_b37/human_g1k_v37.fasta \
  -nct ${NCPU}  \
  -I ${SOUTDocker}/alignments/${BAM_PREFIX}.recal.bam \
  -o ${SOUTDocker}/alignments/${BAM_PREFIX}.recal.bam.BaseRecalibrator.table \
  --knownSites ${KNOWN_INDELS} \
  --knownSites ${KNOWN_SNPS_1000G} \
  --knownSites ${KNOWN_SNPS_OMNI} \
  --knownSites ${KNOWN_SNPS_b138};

  sudo docker logs BaseRecalibrator_${SAMPLE_ID} >> ${LOGFILE}.log

  sudo docker rm BaseRecalibrator_${SAMPLE_ID}

  logger_ngseasy " END BaseRecalibrator post recal "  ${LOGFILE}

else
	logger_ngseasy " [${SOUT}/alignments/${BAM_PREFIX}.recal.bam]  already exists"  ${LOGFILE}
fi

#------permissions------------#
chmod -R 777 ${SOUT}/*

done < ${config_tsv}